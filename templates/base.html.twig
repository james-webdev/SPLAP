<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8">
        <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 128 128%22><text y=%221.2em%22 font-size=%2296%22>⚫️</text></svg>">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        {# Run `composer require symfony/webpack-encore-bundle` to start using Symfony UX #}
        <title>{% block title %}Splap{% endblock %}</title>
        <link href="https://fonts.googleapis.com/css2?family=Pacifico&display=swap" rel="stylesheet">
        <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap" rel="stylesheet">
        <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;700&display=swap" rel="stylesheet">
        {% block stylesheets %}
            <link href="{{ asset('css/style.css') }}" rel="stylesheet">
            <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
        {% endblock %}

    </head>
    <body>
        {% block body %}{% endblock %}
        {% block javascripts %}

{#            <script src="https://cdnjs.cloudflare.com/ajax/libs/dragula/3.7.2/dragula.min.js"></script>#}

             <script src="https://cdn.jsdelivr.net/npm/sortablejs@1.10.2/Sortable.min.js"></script>
{#            <script src="https://cdn.jsdelivr.net/npm/interactjs@1.10.11/dist/interact.min.js"></script>#}

            <script>
                document.addEventListener('DOMContentLoaded', function() {
                    new Sortable(document.getElementById('card-list'), {
                        animation: 150,
                        handle: '.handle',
                        ghostClass: 'sortable-ghost',
                        dragClass: "sortable-drag",
                    });
                });

                // document.addEventListener('DOMContentLoaded', function() {
                //     console.log('what a drag');
                //     dragula([document.getElementById('card-list')], {
                //         moves: function (el, container, handle) {
                //             return handle.classList.contains('handle');
                //         }
                //     });
                // });

                // document.addEventListener('DOMContentLoaded', function() {
                //     let isDragging = false;
                //
                //     interact('.handle').draggable({
                //         // enable inertial throwing
                //         inertia: true,
                //         // keep the element within the area of it's parent
                //         modifiers: [
                //             interact.modifiers.restrictRect({
                //                 restriction: 'parent',
                //                 endOnly: true
                //             })
                //         ],
                //         // enable autoScroll
                //         autoScroll: true,
                //
                //         listeners: {
                //             // call this function on every dragmove event
                //             move: function (event) {
                //                 isDragging = true;
                //
                //                 var target = event.target.parentNode,
                //                     // keep the dragged position in the data-x/data-y attributes
                //                     x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx,
                //                     y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;
                //
                //                 // translate the element
                //                 target.style.webkitTransform =
                //                     target.style.transform =
                //                         'translate(' + x + 'px, ' + y + 'px)';
                //
                //                 // update the position attributes
                //                 target.setAttribute('data-x', x);
                //                 target.setAttribute('data-y', y);
                //             },
                //             // call this function on every dragend event
                //             end: function (event) {
                //                 // Delay resetting isDragging to allow any click events to check it first
                //                 setTimeout(() => {
                //                     isDragging = false;
                //                 }, 1);
                //             }
                //         }
                //     });
                //
                //     // Add a click event listener to the cards
                //     document.querySelectorAll('.card').forEach(function(card) {
                //         card.addEventListener('click', function(event) {
                //             if (!isDragging) {
                //                 window.location.href = this.dataset.link;
                //             }
                //         });
                //     });
                // });

                document.querySelectorAll('.card').forEach(function(card) {
                    card.addEventListener('click', function(event) {
                        if (!event.target.classList.contains('delete-link')) {
                            window.location.href = card.dataset.link;
                        }
                    });
                });

                document.querySelectorAll('.delete-link').forEach(function(link) {
                    link.addEventListener('click', function(event) {
                        event.preventDefault();
                        event.stopPropagation();

                        var id = link.dataset.id;

                        fetch('/delete/' + id, {
                            method: 'POST',
                        })
                            .then(response => response.json())
                            .then(data => {
                                if (data.status === 'success') {
                                    var card = link.closest('.card');
                                    card.classList.add('card-deleting');
                                    card.addEventListener('animationend', function() {
                                        card.remove();
                                    });
                                }
                            });
                    });
                });



            </script>

        {% endblock %}
        {% block page_specific_js %}{% endblock %}
    </body>
</html>
